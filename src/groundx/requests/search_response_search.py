# This file was auto-generated by Fern from our API Definition.

import typing_extensions
import typing_extensions
import typing
from .search_result_item import SearchResultItemParams
from ..core.serialization import FieldMetadata


class SearchResponseSearchParams(typing_extensions.TypedDict):
    count: typing_extensions.NotRequired[int]
    """
    Total results
    """

    results: typing_extensions.NotRequired[typing.Sequence[SearchResultItemParams]]
    """
    Search results
    """

    query: typing_extensions.NotRequired[str]
    """
    The original search request query
    """

    score: typing_extensions.NotRequired[float]
    """
    Confidence score in the search results
    """

    search_query: typing_extensions.NotRequired[typing_extensions.Annotated[str, FieldMetadata(alias="searchQuery")]]
    """
    The actual search query, if the search request query was re-written
    """

    text: typing_extensions.NotRequired[str]
    """
    Suggested context for LLM completion
    """

    next_token: typing_extensions.NotRequired[typing_extensions.Annotated[str, FieldMetadata(alias="nextToken")]]
    """
    For paginated results
    """
